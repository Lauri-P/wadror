c
Beer.count
Beers.count
c
hb.key(hb.values.max)
hb.max_by{|k,v| v}[0]
hb.max_by{|k,v| v}[1]
hb.max_by{|k,v| v}
hb.key(ha.values.max)
hb.max_by{|k,v| v}
hb.max
hb
ha.each{|k, value| hb[k] << value.sum/value.count.to_f}
hb = Hash.new{|h,k| h[k] = []}
ha.each{|k, value| p [k, value.sum/value.count.to_f]}
ha.each{|k, value| p value.sum/value.count.to_f}
ha.each{|k, value| p value.sum/value.count}
ha.each{|k, value| p value.sum}
ha.each{|k, value| p value}
ha.each{|k, value| p [k, value]}
ha.each{|k, value| [k, value]}
ha.each{|k, value| value}
ha.each{|k, value| value.sum}
ha.each{|k, value| [k, value.sum]}
ha["Lager"].sum
ha["Lager"]
ha.each{|k| k.sum}
ha.each{|k| k}
ha.each{|k| p k}
ha.each{|k| p [k, k.sum]}
ha["Lager"]
ha.keys
ha(2)
ha.delete(2)
ha.keys
ha.delete(1)
ha.keys
ha[2]
ha[1]
ha
styles.each{|r| ha[r[0]] << r[1]}
ha = Hash.new{|h,k| h[k] = []}
styles.each{|r| p r[0]}
styles.each{|r| p r[0][0]}
styles.each{|r| r[0][0]}
styles.each{|r| r[0]}
styles.first[1]
styles.first.1
styles.first
ha
styles.each{|r| ha[r[0][0]] << r[0][1]}
ha = Hash.new{|h,k| h[k] = []}
styles[0][0]
styles[0]
styles.each{|r| r[0,0]}
styles.each{|r| r[0]}
h[0]
h[1]
h
styles.each{|r| h[r[0]] << r[1]}
h = Hash.new{|h,k| h[k] = []}
h=hash.new
styles.1.1
styles.1
styles
styles.chunk{|r| r[0]}.each{|style, scores| p[style, scores]}
styles.chunk{|r| r[0]}
beers.chunk{|r| r.beer.style}.each{|style, scores| [style, scores]}
styles[1][0]
styles[1][1]
styles[1,1]
styles[1]
styles.count
styles[0].count
styles[1].count
styles=ratings.map{|r| [r.beer.style, r.score]}
styles=ratings.map{|r| [r.score, r.beer.style]}
ratings.map{|r| [r.score, r.beer.style]}
beers.chunk{|r| r.beer.style}
beers=ratings.sort_by{|r| r.beer.style}
ratings.collect{|r| r.score, r.beer.style}
ratings.map{|r| r.score}
ratings.map{|r| r.score, r.beer.style}.sum
ratings.map{|r| r.score, r.beer.style}
beers.average_rating
beers
beers=ratings.sort_by{|r| r.beer.style}
b
b.average_rating
b=ratings.sort_by{|r| r.beer.style}
ratings.sort_by{|r| r.beer.style}
ratings.sort_by(&:style)
ratings.sort_by(&:beer)
ratings.sort_by(&:beer.style)
ratings.each.beer.style
ratings.beer.style
ratings.last.beer.style
ratings
c
ratings
c
beer.to be_valid
beer
c
beer.delete
beer
continue
params[:rating][:score]
params[:rating]
params
